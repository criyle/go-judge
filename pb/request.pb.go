// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: request.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestID     string                 `protobuf:"bytes,1,opt,name=requestID" json:"requestID,omitempty"`
	Cmd           []*Request_CmdType     `protobuf:"bytes,2,rep,name=cmd" json:"cmd,omitempty"`
	PipeMapping   []*Request_PipeMap     `protobuf:"bytes,3,rep,name=pipeMapping" json:"pipeMapping,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *Request) GetCmd() []*Request_CmdType {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *Request) GetPipeMapping() []*Request_PipeMap {
	if x != nil {
		return x.PipeMapping
	}
	return nil
}

type Request_LocalFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Src           string                 `protobuf:"bytes,1,opt,name=src" json:"src,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request_LocalFile) Reset() {
	*x = Request_LocalFile{}
	mi := &file_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request_LocalFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_LocalFile) ProtoMessage() {}

func (x *Request_LocalFile) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_LocalFile.ProtoReflect.Descriptor instead.
func (*Request_LocalFile) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Request_LocalFile) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

type Request_MemoryFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request_MemoryFile) Reset() {
	*x = Request_MemoryFile{}
	mi := &file_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request_MemoryFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_MemoryFile) ProtoMessage() {}

func (x *Request_MemoryFile) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_MemoryFile.ProtoReflect.Descriptor instead.
func (*Request_MemoryFile) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Request_MemoryFile) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type Request_CachedFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileID        string                 `protobuf:"bytes,1,opt,name=fileID" json:"fileID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request_CachedFile) Reset() {
	*x = Request_CachedFile{}
	mi := &file_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request_CachedFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_CachedFile) ProtoMessage() {}

func (x *Request_CachedFile) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_CachedFile.ProtoReflect.Descriptor instead.
func (*Request_CachedFile) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Request_CachedFile) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

type Request_PipeCollector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Max           int64                  `protobuf:"varint,2,opt,name=max" json:"max,omitempty"`
	Pipe          bool                   `protobuf:"varint,3,opt,name=pipe" json:"pipe,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request_PipeCollector) Reset() {
	*x = Request_PipeCollector{}
	mi := &file_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request_PipeCollector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_PipeCollector) ProtoMessage() {}

func (x *Request_PipeCollector) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_PipeCollector.ProtoReflect.Descriptor instead.
func (*Request_PipeCollector) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Request_PipeCollector) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Request_PipeCollector) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Request_PipeCollector) GetPipe() bool {
	if x != nil {
		return x.Pipe
	}
	return false
}

type Request_File struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to File:
	//
	//	*Request_File_Local
	//	*Request_File_Memory
	//	*Request_File_Cached
	//	*Request_File_Pipe
	//	*Request_File_StreamIn
	//	*Request_File_StreamOut
	File          isRequest_File_File `protobuf_oneof:"file"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request_File) Reset() {
	*x = Request_File{}
	mi := &file_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_File) ProtoMessage() {}

func (x *Request_File) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_File.ProtoReflect.Descriptor instead.
func (*Request_File) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Request_File) GetFile() isRequest_File_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Request_File) GetLocal() *Request_LocalFile {
	if x != nil {
		if x, ok := x.File.(*Request_File_Local); ok {
			return x.Local
		}
	}
	return nil
}

func (x *Request_File) GetMemory() *Request_MemoryFile {
	if x != nil {
		if x, ok := x.File.(*Request_File_Memory); ok {
			return x.Memory
		}
	}
	return nil
}

func (x *Request_File) GetCached() *Request_CachedFile {
	if x != nil {
		if x, ok := x.File.(*Request_File_Cached); ok {
			return x.Cached
		}
	}
	return nil
}

func (x *Request_File) GetPipe() *Request_PipeCollector {
	if x != nil {
		if x, ok := x.File.(*Request_File_Pipe); ok {
			return x.Pipe
		}
	}
	return nil
}

func (x *Request_File) GetStreamIn() *emptypb.Empty {
	if x != nil {
		if x, ok := x.File.(*Request_File_StreamIn); ok {
			return x.StreamIn
		}
	}
	return nil
}

func (x *Request_File) GetStreamOut() *emptypb.Empty {
	if x != nil {
		if x, ok := x.File.(*Request_File_StreamOut); ok {
			return x.StreamOut
		}
	}
	return nil
}

type isRequest_File_File interface {
	isRequest_File_File()
}

type Request_File_Local struct {
	Local *Request_LocalFile `protobuf:"bytes,1,opt,name=local,oneof"`
}

type Request_File_Memory struct {
	Memory *Request_MemoryFile `protobuf:"bytes,2,opt,name=memory,oneof"`
}

type Request_File_Cached struct {
	Cached *Request_CachedFile `protobuf:"bytes,3,opt,name=cached,oneof"`
}

type Request_File_Pipe struct {
	Pipe *Request_PipeCollector `protobuf:"bytes,4,opt,name=pipe,oneof"`
}

type Request_File_StreamIn struct {
	// streamIn only valid in streaming RPC
	StreamIn *emptypb.Empty `protobuf:"bytes,5,opt,name=streamIn,oneof"`
}

type Request_File_StreamOut struct {
	// streamOut only valid in streaming RPC
	StreamOut *emptypb.Empty `protobuf:"bytes,6,opt,name=streamOut,oneof"`
}

func (*Request_File_Local) isRequest_File_File() {}

func (*Request_File_Memory) isRequest_File_File() {}

func (*Request_File_Cached) isRequest_File_File() {}

func (*Request_File_Pipe) isRequest_File_File() {}

func (*Request_File_StreamIn) isRequest_File_File() {}

func (*Request_File_StreamOut) isRequest_File_File() {}

type Request_CmdType struct {
	state             protoimpl.MessageState    `protogen:"open.v1"`
	Args              []string                  `protobuf:"bytes,1,rep,name=args" json:"args,omitempty"`
	Env               []string                  `protobuf:"bytes,2,rep,name=env" json:"env,omitempty"`
	Files             []*Request_File           `protobuf:"bytes,3,rep,name=files" json:"files,omitempty"`
	Tty               bool                      `protobuf:"varint,13,opt,name=tty" json:"tty,omitempty"`
	CpuTimeLimit      uint64                    `protobuf:"varint,4,opt,name=cpuTimeLimit" json:"cpuTimeLimit,omitempty"`
	ClockTimeLimit    uint64                    `protobuf:"varint,5,opt,name=clockTimeLimit" json:"clockTimeLimit,omitempty"`
	MemoryLimit       uint64                    `protobuf:"varint,6,opt,name=memoryLimit" json:"memoryLimit,omitempty"`
	StackLimit        uint64                    `protobuf:"varint,12,opt,name=stackLimit" json:"stackLimit,omitempty"`
	ProcLimit         uint64                    `protobuf:"varint,7,opt,name=procLimit" json:"procLimit,omitempty"`
	CpuRateLimit      uint64                    `protobuf:"varint,15,opt,name=cpuRateLimit" json:"cpuRateLimit,omitempty"`
	CpuSetLimit       string                    `protobuf:"bytes,17,opt,name=cpuSetLimit" json:"cpuSetLimit,omitempty"`
	DataSegmentLimit  bool                      `protobuf:"varint,16,opt,name=dataSegmentLimit" json:"dataSegmentLimit,omitempty"`
	AddressSpaceLimit bool                      `protobuf:"varint,19,opt,name=addressSpaceLimit" json:"addressSpaceLimit,omitempty"`
	CopyIn            map[string]*Request_File  `protobuf:"bytes,8,rep,name=copyIn" json:"copyIn,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Symlinks          map[string]string         `protobuf:"bytes,18,rep,name=symlinks" json:"symlinks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CopyOut           []*Request_CmdCopyOutFile `protobuf:"bytes,9,rep,name=copyOut" json:"copyOut,omitempty"`
	CopyOutCached     []*Request_CmdCopyOutFile `protobuf:"bytes,10,rep,name=copyOutCached" json:"copyOutCached,omitempty"`
	CopyOutDir        string                    `protobuf:"bytes,11,opt,name=copyOutDir" json:"copyOutDir,omitempty"`
	CopyOutMax        uint64                    `protobuf:"varint,14,opt,name=copyOutMax" json:"copyOutMax,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Request_CmdType) Reset() {
	*x = Request_CmdType{}
	mi := &file_request_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request_CmdType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_CmdType) ProtoMessage() {}

func (x *Request_CmdType) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_CmdType.ProtoReflect.Descriptor instead.
func (*Request_CmdType) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Request_CmdType) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Request_CmdType) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Request_CmdType) GetFiles() []*Request_File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Request_CmdType) GetTty() bool {
	if x != nil {
		return x.Tty
	}
	return false
}

func (x *Request_CmdType) GetCpuTimeLimit() uint64 {
	if x != nil {
		return x.CpuTimeLimit
	}
	return 0
}

func (x *Request_CmdType) GetClockTimeLimit() uint64 {
	if x != nil {
		return x.ClockTimeLimit
	}
	return 0
}

func (x *Request_CmdType) GetMemoryLimit() uint64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *Request_CmdType) GetStackLimit() uint64 {
	if x != nil {
		return x.StackLimit
	}
	return 0
}

func (x *Request_CmdType) GetProcLimit() uint64 {
	if x != nil {
		return x.ProcLimit
	}
	return 0
}

func (x *Request_CmdType) GetCpuRateLimit() uint64 {
	if x != nil {
		return x.CpuRateLimit
	}
	return 0
}

func (x *Request_CmdType) GetCpuSetLimit() string {
	if x != nil {
		return x.CpuSetLimit
	}
	return ""
}

func (x *Request_CmdType) GetDataSegmentLimit() bool {
	if x != nil {
		return x.DataSegmentLimit
	}
	return false
}

func (x *Request_CmdType) GetAddressSpaceLimit() bool {
	if x != nil {
		return x.AddressSpaceLimit
	}
	return false
}

func (x *Request_CmdType) GetCopyIn() map[string]*Request_File {
	if x != nil {
		return x.CopyIn
	}
	return nil
}

func (x *Request_CmdType) GetSymlinks() map[string]string {
	if x != nil {
		return x.Symlinks
	}
	return nil
}

func (x *Request_CmdType) GetCopyOut() []*Request_CmdCopyOutFile {
	if x != nil {
		return x.CopyOut
	}
	return nil
}

func (x *Request_CmdType) GetCopyOutCached() []*Request_CmdCopyOutFile {
	if x != nil {
		return x.CopyOutCached
	}
	return nil
}

func (x *Request_CmdType) GetCopyOutDir() string {
	if x != nil {
		return x.CopyOutDir
	}
	return ""
}

func (x *Request_CmdType) GetCopyOutMax() uint64 {
	if x != nil {
		return x.CopyOutMax
	}
	return 0
}

type Request_CmdCopyOutFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Optional      bool                   `protobuf:"varint,2,opt,name=optional" json:"optional,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request_CmdCopyOutFile) Reset() {
	*x = Request_CmdCopyOutFile{}
	mi := &file_request_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request_CmdCopyOutFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_CmdCopyOutFile) ProtoMessage() {}

func (x *Request_CmdCopyOutFile) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_CmdCopyOutFile.ProtoReflect.Descriptor instead.
func (*Request_CmdCopyOutFile) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Request_CmdCopyOutFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Request_CmdCopyOutFile) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

type Request_PipeMap struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	In            *Request_PipeMap_PipeIndex `protobuf:"bytes,1,opt,name=in" json:"in,omitempty"`
	Out           *Request_PipeMap_PipeIndex `protobuf:"bytes,2,opt,name=out" json:"out,omitempty"`
	Proxy         bool                       `protobuf:"varint,3,opt,name=proxy" json:"proxy,omitempty"`
	Name          string                     `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Max           uint64                     `protobuf:"varint,5,opt,name=max" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request_PipeMap) Reset() {
	*x = Request_PipeMap{}
	mi := &file_request_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request_PipeMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_PipeMap) ProtoMessage() {}

func (x *Request_PipeMap) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_PipeMap.ProtoReflect.Descriptor instead.
func (*Request_PipeMap) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Request_PipeMap) GetIn() *Request_PipeMap_PipeIndex {
	if x != nil {
		return x.In
	}
	return nil
}

func (x *Request_PipeMap) GetOut() *Request_PipeMap_PipeIndex {
	if x != nil {
		return x.Out
	}
	return nil
}

func (x *Request_PipeMap) GetProxy() bool {
	if x != nil {
		return x.Proxy
	}
	return false
}

func (x *Request_PipeMap) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Request_PipeMap) GetMax() uint64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type Request_PipeMap_PipeIndex struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Fd            int32                  `protobuf:"varint,2,opt,name=fd" json:"fd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request_PipeMap_PipeIndex) Reset() {
	*x = Request_PipeMap_PipeIndex{}
	mi := &file_request_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request_PipeMap_PipeIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_PipeMap_PipeIndex) ProtoMessage() {}

func (x *Request_PipeMap_PipeIndex) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_PipeMap_PipeIndex.ProtoReflect.Descriptor instead.
func (*Request_PipeMap_PipeIndex) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0, 7, 0}
}

func (x *Request_PipeMap_PipeIndex) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Request_PipeMap_PipeIndex) GetFd() int32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

var File_request_proto protoreflect.FileDescriptor

var file_request_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8f, 0x0e, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6d, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x0b, 0x70, 0x69, 0x70,
	0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0x1d, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x1a, 0x26, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a,
	0x24, 0x0a, 0x0a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x44, 0x1a, 0x49, 0x0a, 0x0d, 0x50, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x69, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x69, 0x70, 0x65,
	0x1a, 0xc0, 0x02, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x48,
	0x00, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65,
	0x48, 0x00, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x04,
	0x70, 0x69, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x70, 0x65, 0x12, 0x34, 0x0a,
	0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x12, 0x36, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x75, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x75, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x1a, 0xef, 0x06, 0x0a, 0x07, 0x43, 0x6d, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x26, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x74, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x70, 0x75, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x70, 0x75, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x63, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x70, 0x75, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x63, 0x70, 0x75, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x70, 0x75, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x63,
	0x6f, 0x70, 0x79, 0x49, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6d, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x43, 0x6f, 0x70, 0x79, 0x49, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f,
	0x70, 0x79, 0x49, 0x6e, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x43, 0x6d, 0x64, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x79, 0x6d, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x6d, 0x64, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x07, 0x63, 0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x6f, 0x70,
	0x79, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6d,
	0x64, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0d, 0x63, 0x6f,
	0x70, 0x79, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74, 0x44, 0x69, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74, 0x44, 0x69, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74, 0x4d, 0x61, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x63, 0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74, 0x4d, 0x61, 0x78, 0x1a, 0x4b, 0x0a, 0x0b, 0x43,
	0x6f, 0x70, 0x79, 0x49, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x79, 0x6d, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x0e, 0x43, 0x6d, 0x64, 0x43, 0x6f, 0x70, 0x79,
	0x4f, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x1a, 0xd8, 0x01, 0x0a, 0x07, 0x50, 0x69, 0x70, 0x65,
	0x4d, 0x61, 0x70, 0x12, 0x2d, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x70,
	0x65, 0x4d, 0x61, 0x70, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x02,
	0x69, 0x6e, 0x12, 0x2f, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x70,
	0x65, 0x4d, 0x61, 0x70, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x03,
	0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x1a,
	0x31, 0x0a, 0x09, 0x50, 0x69, 0x70, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x66, 0x64, 0x42, 0x24, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x72, 0x69, 0x79, 0x6c, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x2f, 0x70, 0x62, 0x92, 0x03, 0x02, 0x08, 0x02, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var (
	file_request_proto_rawDescOnce sync.Once
	file_request_proto_rawDescData []byte
)

func file_request_proto_rawDescGZIP() []byte {
	file_request_proto_rawDescOnce.Do(func() {
		file_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_request_proto_rawDesc), len(file_request_proto_rawDesc)))
	})
	return file_request_proto_rawDescData
}

var file_request_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_request_proto_goTypes = []any{
	(*Request)(nil),                   // 0: pb.Request
	(*Request_LocalFile)(nil),         // 1: pb.Request.LocalFile
	(*Request_MemoryFile)(nil),        // 2: pb.Request.MemoryFile
	(*Request_CachedFile)(nil),        // 3: pb.Request.CachedFile
	(*Request_PipeCollector)(nil),     // 4: pb.Request.PipeCollector
	(*Request_File)(nil),              // 5: pb.Request.File
	(*Request_CmdType)(nil),           // 6: pb.Request.CmdType
	(*Request_CmdCopyOutFile)(nil),    // 7: pb.Request.CmdCopyOutFile
	(*Request_PipeMap)(nil),           // 8: pb.Request.PipeMap
	nil,                               // 9: pb.Request.CmdType.CopyInEntry
	nil,                               // 10: pb.Request.CmdType.SymlinksEntry
	(*Request_PipeMap_PipeIndex)(nil), // 11: pb.Request.PipeMap.PipeIndex
	(*emptypb.Empty)(nil),             // 12: google.protobuf.Empty
}
var file_request_proto_depIdxs = []int32{
	6,  // 0: pb.Request.cmd:type_name -> pb.Request.CmdType
	8,  // 1: pb.Request.pipeMapping:type_name -> pb.Request.PipeMap
	1,  // 2: pb.Request.File.local:type_name -> pb.Request.LocalFile
	2,  // 3: pb.Request.File.memory:type_name -> pb.Request.MemoryFile
	3,  // 4: pb.Request.File.cached:type_name -> pb.Request.CachedFile
	4,  // 5: pb.Request.File.pipe:type_name -> pb.Request.PipeCollector
	12, // 6: pb.Request.File.streamIn:type_name -> google.protobuf.Empty
	12, // 7: pb.Request.File.streamOut:type_name -> google.protobuf.Empty
	5,  // 8: pb.Request.CmdType.files:type_name -> pb.Request.File
	9,  // 9: pb.Request.CmdType.copyIn:type_name -> pb.Request.CmdType.CopyInEntry
	10, // 10: pb.Request.CmdType.symlinks:type_name -> pb.Request.CmdType.SymlinksEntry
	7,  // 11: pb.Request.CmdType.copyOut:type_name -> pb.Request.CmdCopyOutFile
	7,  // 12: pb.Request.CmdType.copyOutCached:type_name -> pb.Request.CmdCopyOutFile
	11, // 13: pb.Request.PipeMap.in:type_name -> pb.Request.PipeMap.PipeIndex
	11, // 14: pb.Request.PipeMap.out:type_name -> pb.Request.PipeMap.PipeIndex
	5,  // 15: pb.Request.CmdType.CopyInEntry.value:type_name -> pb.Request.File
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_request_proto_init() }
func file_request_proto_init() {
	if File_request_proto != nil {
		return
	}
	file_request_proto_msgTypes[5].OneofWrappers = []any{
		(*Request_File_Local)(nil),
		(*Request_File_Memory)(nil),
		(*Request_File_Cached)(nil),
		(*Request_File_Pipe)(nil),
		(*Request_File_StreamIn)(nil),
		(*Request_File_StreamOut)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_request_proto_rawDesc), len(file_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_request_proto_goTypes,
		DependencyIndexes: file_request_proto_depIdxs,
		MessageInfos:      file_request_proto_msgTypes,
	}.Build()
	File_request_proto = out.File
	file_request_proto_goTypes = nil
	file_request_proto_depIdxs = nil
}
